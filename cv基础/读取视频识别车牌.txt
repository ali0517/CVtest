#include "opencv2/core/core.hpp"  
#include "opencv2/highgui/highgui.hpp"  
#include "opencv2/imgproc/imgproc.hpp"  
#include "opencv2/objdetect/objdetect.hpp"  
  
#include <iostream>  
#include <fstream>   
#include <string>  
using namespace cv;  
using namespace std;  
  
  
int main( int argc, char** argv )  
{     
    VideoCapture vedio("cars.avi");    //读取视频  
    if(!vedio.isOpened())  
    {  
        cout<<"视频打开失败！"<<endl;  
        return 1;  
    }  
    double rate= vedio.get(CV_CAP_PROP_FPS);    //得到帧频  
    int delay= int(1000/rate);    //定义一个延时时间  
  
    Mat frame;  
      
    Size size = Size(int(vedio.get( CV_CAP_PROP_FRAME_WIDTH )), int(vedio.get( CV_CAP_PROP_FRAME_HEIGHT )));    //视频图像的尺寸  
    //定义一个写入视频文件  
    VideoWriter writer("plates.avi", CV_FOURCC('M','J','P','G'), rate, size, true);      
    if (!writer.isOpened())  
    {  
        cout << "初始化VideoWriter失败！" << endl;  
        return 1;  
    }  
  
    CascadeClassifier classifier("cascade.xml");  
  
    while(true)  
    {  
        if (!vedio.read(frame))  
            break;  
  
        vector<Rect> plates;  
        //车牌检测，这里设定车牌的最大尺寸为190×60  
        classifier.detectMultiScale(frame, plates, 1.1, 3, 0, Size(), Size(190, 60));  
                  
        for(int i = 0; i < plates.size(); i++)  
            rectangle(frame, plates[i], Scalar(255, 0, 255), 2);  
        //加上文字  
putText(frame,"http://blog.csdn.net/zhaocj",Point(50,60),CV_FONT_HERSHEY_COMPLEX,0.7,Scalar(255,0,0), 2);  
        writer.write(frame);    //写视频  
          
        if (cv::waitKey(delay)>=0)  
            break;  
    }  
    vedio.release();  
    return 0;  
}  